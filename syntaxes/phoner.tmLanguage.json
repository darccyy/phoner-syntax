{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Phonotactic",

  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#classes"
    },
    {
      "include": "#patterns"
    },
    {
      "include": "#reasons"
    },
    {
      "include": "#tests"
    }
  ],

  "repository": {
    "comments": {
      "name": "comment.line.phoner",
      "begin": "#",
      "end": "\n"
    },

    "classes": {
      "begin": "\\$[A-Z]",
      "end": "\n",
      "beginCaptures": {
        "0": { "name": "entity.name.type.class.phoner" }
      },
      "patterns": [
        {
          "include": "#regex"
        }
      ]
    },

    "patterns": {
      "begin": "&",
      "end": "\n",
      "beginCaptures": { "0": { "name": "keyword.operator.pattern.phoner" } },
      "patterns": [{ "include": "#intent" }, { "include": "#regex" }]
    },

    "reasons": {
      "name": "string.reason.phoner",
      "begin": "@@?",
      "end": "\n",
      "beginCaptures": { "0": { "name": "keyword.operator.reason.phoner" } }
    },

    "tests": {
      "name": "variable.literal.phoner",
      "begin": "\\*",
      "end": "\n",
      "beginCaptures": { "0": { "name": "keyword.other.phoner" } },
      "patterns": [{ "include": "#intent" }]
    },

    "intent": {
      "patterns": [
        {
          "name": "keyword.control.phoner",
          "match": "\\+"
        },
        {
          "name": "variable.language.self.phoner",
          "match": "!"
        }
      ]
    },

    "regex": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": { "0": { "name": "punctuation.brackets.phoner" } },
          "endCaptures": { "0": { "name": "punctuation.brackets.phoner" } },
          "patterns": [{ "include": "#regex" }]
        },
        {
          "name": "keyword.operator.phoner",
          "match": "[\\[\\]\\?|\\|\\+\\*\\.]"
        },
        {
          "name": "keyword.other.phoner",
          "match": "[\\^\\$]"
        },
        {
          "name": "keyword.operator.phoner",
          "begin": "\\{",
          "end": "\\}",
          "match": "\\{[\\d\\,]+}"
        },
        {
          "name": "entity.name.type.phoner",
          "match": "[A-Z]"
        },
        {
          "name": "variable.literal.phoner",
          "match": "[A-Z]"
        }
      ]
    }
  },
  "scopeName": "source.phoner"
}
